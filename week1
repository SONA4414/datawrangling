EXPERIMENT-1
SOURCE CODE:

Data is defined as "facts and statistics collected together for reference or analysis."
Data helps us understand the world around us by providing context and insights that would otherwise be unavailable
Code:
!pip install pandas #Discovery
import pandas as pd df=pd.read_csv('Customer.csv') df
Output:

Customer ID	Customer Name	Segment	Age	Country	City	State	Postal Code	Region	
0	CG-12520	Claire Gute	Consumer	67	United States	Henderson	Kentucky	42420	South
1	DV-13045	Darrin Van Huff	Corporate	31	United States	Los Angeles	California	90036	West


#Structuring df.dtypes Output:
Customer ID object Customer Name object Segment     object
Age	int64
df.shape Output:
(793, 9)

df.head(10) Output:

Customer ID	Customer Name	Segment	Age	Country	City	State	Postal Code	Region	
0	CG-12520	Claire Gute	Consumer	67	United States	Henderson	Kentucky	42420	South
1	DV-13045	Darrin Van Huff	Corporate	31	United States	Los Angeles	California	90036	West
2	SO-20335	Sean O'Donnell	Consumer	65	United States	Fort Lauderdale	Florida	33311	South
df.tail()
 
Output:

Customer ID	Customer Name	Segment	Age	Country	City	State	Postal Code	Region	
788	CJ-11875	Carl Jackson	Corporate	64	United States	Philadelphia	Pennsylvania	19140	East
789	RS-19870	Roy Skaria	Home Office	39	United States	Burlington	Iowa	52601	Central
df.info() Output:
<class 'pandas.core.frame.DataFrame'> RangeIndex: 793 entries, 0 to 792 Data columns (total 9 columns):
#	Column	Non-Null Count Dtype

0	Customer ID	793 non-null	object
1	Customer Name 793 non-null	object
2	Segment	793 non-null	object
df.describe() Output:

Age	Postal Code	
count	793.000000	793.000000
mean	44.467844	55229.717528

df['City'].count() Output:
793
df['City']=df['City'].str.lower() df.head()
Output:

Customer ID	Customer Name	Segment	Age	Country	City	State	Postal Code	Region	
0	CG-12520	Claire Gute	Consumer	67	United States	henderson	Kentucky	42420	South
1	DV-13045	Darrin Van Huff	Corporate	31	United States	los angeles	California	90036	West

df['State']=df['State'].str.replace('Iowa','Ohio') df.tail()
Output:

Customer ID	Customer Name	Segment	Age	Country	City	State	Postal Code	Region	
788	CJ-11875	Carl Jackson	Corporate	64	United States	philadelphia	Pennsylvania	19140	East
 
Customer ID	Customer Name	Segment	Age	Country	City	State	Postal Code	Region	
789	RS-19870	Roy Skaria	Home Office	39	United States	burlington	Ohio	52601	Central

#Data Cleaning df.isnull().sum().sum() 0
df.duplicated() Output:
788	False
789	False
790	False
791	False
792	False
Length: 793, dtype: bool


df[df['Age'] < 40] Output:

Customer ID	Customer Name	Segment	Age	Country	City	State	Postal Code	Region	
1	DV-13045	Darrin Van Huff	Corporate	31	United States	los angeles	California	90036	West
3	BH-11710	Brosina Hoffman	Consumer	20	United States	los angeles	California	90032	West

#atleast one cell is NAN df.dropna(inplace=True) df.shape
df.drop(['Age','Segment'],axis=1,inplace=True) df.head(10)
#Adding
df['Amount']=df['Postal Code']/50 df.head()
Output:

Customer ID	Customer Name	Segment	Country	City	State	Postal Code	Region	Amount	
0	CG-12520	Claire Gute	Consumer	United States	Henderson	Kentucky	42420	South	848.40
1	DV-13045	Darrin Van Huff	Corporate	United States	Los Angeles	California	90036	West	1800.72
